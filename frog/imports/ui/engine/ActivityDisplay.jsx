import React, { Component, PropTypes } from 'react';import ReactDOM from 'react-dom';import ReactPlayer from 'react-player';import QuestionDisplay from './QuestionDisplay.jsx';export default class ActivityDisplay extends Component {  constructor(props) {    super(props);    this.state = {      isClicked: false,    }  }  activityHandler(event) {    event.preventDefault();    this.setState({      isClicked: !this.state.isClicked,    });  }  renderQuestions(){    return (this.props.object.questions ?      this.props.object.questions        .map(zipWithIndex) : <li>No Questions</li>);  }  renderActivityOnClick(){    if (this.props.type == "lecture"){      return (<div className="display-lecture">                  Follow the URL: {this.props.object.path}              </div>);    } else if (this.props.type == "video"){      return (<ReactPlayer url={this.props.object.url} playing controls/>);    } else if (this.props.type == "quiz"){      return (<div className="display-quiz">                      {this.renderQuestions()}              </div>);    } else {      return "";    };  }  render() {    return (      <div className="activity-summary">      <li onClick={this.activityHandler.bind(this)}>        {this.props.name}, type:{this.props.type}, plane:{this.props.plane}      </li>      {        //If the user has clicked on the activity, put prevous properties in addition        //to hidden properties (returned by the renderObjectProperties)        this.state.isClicked ? this.renderActivityOnClick() : ""      }      </div>    );  }}function zipWithIndex(value, index, self) {   return (<QuestionDisplay             key = {String(index).concat(String(value.question))}            id = {String(index).concat(String(value.question))}            question = {value.question}            choices = {value.choices}            answer = {value.answer} />          );}